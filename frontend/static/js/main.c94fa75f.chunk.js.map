{"version":3,"sources":["Redux/VacationsState.ts","reportWebVitals.ts","Services/Global.ts","Redux/EditVacationState.ts","Socket.io/SocketManager.ts","Services/GlobalAuth.ts","Redux/UsersState.ts","Redux/Store.ts","Services/GlobalError.ts","Components/VacationsArea/VacationUserCard/VacationUserCard.tsx","Components/VacationsArea/VacationAdminCard/VacationAdminCard.tsx","Components/VacationsArea/VacationsList/VacationsList.tsx","Components/UserArea/Register/Register.tsx","Components/UserArea/Login/Login.tsx","Components/VacationsArea/AddVacation/AddVacation.tsx","Components/UserArea/Logout/Logout.tsx","Components/UserArea/EditUser/EditUser.tsx","Components/LayoutArea/Home/Home.tsx","Components/VacationsArea/EditVacation/EditVacation.tsx","Services/GlobalRandomColor.ts","Components/VacationsArea/AdminPage/AdminPage.tsx","Components/LayoutArea/VacationTab/VacationTab.tsx","Components/LayoutArea/App/App.tsx","index.tsx"],"names":["VacationActionType","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","VacationState","vacation","VacationDownloadedAction","vacations","type","VacationDownloaded","payload","VacationEditedAction","VacationEdited","FollowDeletedAction","VacationDeletedFollow","Globals","vacationsUrl","authUrl","usersUrl","followsUrl","socketIoUrl","productsUrl","init","EditVacationActionType","SocketManager","socket","this","io","on","addedVacation","store","dispatch","VacationAdded","updatedVacation","id","VacationDeleted","VacationDeletedAction","disconnect","socketManagerInstance","EditVacationState","EditVacationId","JSON","parse","sessionStorage","getItem","EditVacationIdAction","authorization","user","axios","defaults","headers","token","logoutUser","clear","UserActionType","UserLogout","VacationClean","EditVacationClean","UserState","UserLoginAction","UserLogin","UserEditedAction","UserEdited","reducers","combineReducers","userReducer","currentSate","action","newState","vacationReducer","sort","v","userFollow","push","indexToUpdate","findIndex","vacationId","indexToDeleted","splice","VacationAddedFollow","indexToUpdateFollow","follows","indexToUpdateUnFollow","editVacationReducer","createStore","errorsService","err","error","Array","isArray","allErrors","response","data","message","startsWith","useStyles","makeStyles","theme","createStyles","root","maxWidth","maxHeight","display","media","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","color","avatar","backgroundColor","red","playIcon","right","VacationUserCard","props","classes","history","useHistory","useState","expanded","setExpanded","mount","useEffect","a","get","find","f","userId","getState","unSubscribe","subscribe","activeFollow","followState","follow","followSetState","handleExpandClick","post","delete","status","alert","getError","className","style","marginTop","Card","CardMedia","component","alt","height","image","imageFileName","title","CardContent","Typography","variant","destination","description","Date","fromDate","toDateString","toDate","price","CardActions","disableSpacing","IconButton","aria-label","clsx","onClick","aria-expanded","VacationAdminCard","deleteVacation","window","confirm","setItem","stringify","to","VacationsList","unsubscribeFromStore","state","userLogin","setState","length","isAdmin","map","Component","Register","useForm","handleSubmit","register","onSubmit","Container","Grid","Paper","elevation","padding","width","margin","Avatar","align","TextField","inputProps","minLength","maxLength","fullWidth","required","inputRef","label","name","size","Button","Link","href","Login","connect","container","spacing","AddVacation","toISOString","slice","date","setDate","myFormData","FormData","append","toString","item","method","encType","xs","multiline","InputLabelProps","shrink","min","max","onChange","e","target","value","accept","Logout","fontSize","EditUser","userState","userSetState","put","defaultValue","firstName","lastName","userName","Home","EditVacation","match","params","defaultValues","newImageFileName","getRandomColor","i","Math","floor","random","AdminPage","vacationFollowers","setVacationFollowers","labels","datasets","borderColor","borderWidth","options","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","stepSize","VacationTab","vacationState","vacationSetState","sendEditVacationId","routes","path","render","AppBar","Tabs","location","pathname","scrollButtons","Tab","icon","includes","exact","from","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c94fa75f.chunk.js","sourcesContent":["import VacationModel from \"../Components/VacationsArea/Models/VacationModel\";\r\n\r\nexport class VacationState {\r\n    public vacation: VacationModel[] = [];\r\n}\r\n\r\nexport enum VacationActionType {\r\n    VacationDownloaded = \"vacationDownloaded\",\r\n    VacationAdded = \"VacationAdded\",\r\n    VacationEdited = \"VacationEdited\",\r\n    VacationDeleted = \"VacationDeleted\",\r\n    VacationAddedFollow = \"VacationAddedFollow\",\r\n    VacationDeletedFollow = \"VacationDeletedFollow\",\r\n    VacationClean = \"VacationClean\"\r\n}\r\n\r\nexport interface VacationAction {\r\n    type: VacationActionType;\r\n    payload?: any;\r\n}\r\n\r\nexport function VacationDownloadedAction(vacations: VacationModel[]): VacationAction {\r\n    return { type: VacationActionType.VacationDownloaded, payload: vacations };\r\n}\r\nexport function VacationAddedAction(vacation: VacationModel): VacationAction {\r\n    return { type: VacationActionType.VacationAdded, payload: vacation };\r\n}\r\nexport function VacationEditedAction(vacation: VacationModel): VacationAction {\r\n    return { type: VacationActionType.VacationEdited, payload: vacation };\r\n}\r\nexport function VacationDeletedAction(id: number): VacationAction {\r\n    return { type: VacationActionType.VacationDeleted, payload: id };\r\n}\r\nexport function FollowAddedAction(vacation: VacationModel): VacationAction {\r\n    return { type: VacationActionType.VacationAddedFollow, payload: vacation };\r\n}\r\nexport function FollowDeletedAction(vacation: VacationModel): VacationAction {\r\n    return { type: VacationActionType.VacationDeletedFollow, payload: vacation };\r\n}\r\nexport function VacationCleanAction(): VacationAction {\r\n    return { type: VacationActionType.VacationClean };\r\n}\r\n\r\nexport function vacationReducer(currentSate: VacationState = new VacationState(),\r\n    action: VacationAction): VacationState {\r\n    const newState = { ...currentSate };\r\n    switch (action.type) {\r\n        case VacationActionType.VacationDownloaded:\r\n            newState.vacation = action.payload;\r\n            newState.vacation.sort(v => v.userFollow ? -1 : 1);\r\n            break;\r\n        case VacationActionType.VacationAdded:\r\n            newState.vacation.push(action.payload);\r\n            newState.vacation.sort(v => v.userFollow ? -1 : 1);\r\n            break;\r\n        case VacationActionType.VacationEdited:\r\n            const indexToUpdate = newState.vacation.findIndex(v => v.vacationId === action.payload.vacationId);\r\n            newState.vacation[indexToUpdate] = action.payload;\r\n            newState.vacation.sort(v => v.userFollow ? -1 : 1);\r\n            break;\r\n        case VacationActionType.VacationDeleted:\r\n            const indexToDeleted = newState.vacation.findIndex(v => v.vacationId === action.payload);\r\n            newState.vacation.splice(indexToDeleted, 1);\r\n            newState.vacation.sort(v => v.userFollow ? -1 : 1);\r\n            break;\r\n        case VacationActionType.VacationAddedFollow:\r\n            const indexToUpdateFollow = newState.vacation.findIndex(v => v.vacationId === action.payload.vacationId);\r\n            newState.vacation[indexToUpdateFollow].userFollow = true;\r\n            newState.vacation[indexToUpdateFollow].follows = newState.vacation[indexToUpdateFollow].follows + 1;\r\n            newState.vacation.sort(v => v.userFollow ? -1 : 1);\r\n            break;\r\n        case VacationActionType.VacationDeletedFollow:\r\n            const indexToUpdateUnFollow = newState.vacation.findIndex(v => v.vacationId === action.payload.vacationId);\r\n            newState.vacation[indexToUpdateUnFollow].userFollow = false;\r\n            newState.vacation[indexToUpdateUnFollow].follows = newState.vacation[indexToUpdateUnFollow].follows - 1;\r\n            newState.vacation.sort(v => v.userFollow ? -1 : 1);\r\n            break;\r\n        case VacationActionType.VacationClean:\r\n            newState.vacation = [];\r\n            break;\r\n\r\n            \r\n    }\r\n    return newState;\r\n}\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export class Globals {\r\n\r\n    public static productsUrl: string;\r\n    public static vacationsUrl: string;\r\n    public static authUrl: string;\r\n    public static usersUrl: string;\r\n    public static followsUrl: string;\r\n    public static socketIoUrl:string;\r\n    \r\n\r\n    public static init() {\r\n        if (process.env.NODE_ENV === \"production\") {\r\n            Globals.vacationsUrl = \"https://vacation-trips.herokuapp.com/api/vacations/\";\r\n            Globals.authUrl = \"https://vacation-trips.herokuapp.com/api/auth/\";\r\n            Globals.usersUrl = \"https://vacation-trips.herokuapp.com/api/users/\";\r\n            Globals.followsUrl = \"https://vacation-trips.herokuapp.com/api/follows/\";\r\n            Globals.socketIoUrl = \"https://vacation-trips.herokuapp.com/\";\r\n        }\r\n        else {\r\n            Globals.vacationsUrl = \"http://localhost:3001/api/vacations/\";\r\n            Globals.authUrl = \"http://localhost:3001/api/auth/\";\r\n            Globals.usersUrl = \"http://localhost:3001/api/users/\";\r\n            Globals.followsUrl = \"http://localhost:3001/api/follows/\";\r\n            Globals.socketIoUrl = \"http://localhost:3001/\";\r\n        }\r\n    }\r\n}\r\n\r\nGlobals.init();","export class EditVacationState {\r\n\r\n    public EditVacationId: number = 0;\r\n\r\n    constructor() {\r\n        const EditVacationId = JSON.parse(sessionStorage.getItem(\"EditVacationId\"));\r\n        if (EditVacationId) {\r\n            this.EditVacationId = EditVacationId;\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nexport enum EditVacationActionType {\r\n    EditVacationId = \"VacationId\",\r\n    EditVacationClean=\"EditVacationClean\"\r\n}\r\n\r\nexport interface EditVacationAction {\r\n    type: EditVacationActionType;\r\n    payload?: any;\r\n}\r\n\r\nexport function EditVacationIdAction(id: number): EditVacationAction {\r\n    return { type: EditVacationActionType.EditVacationId, payload: id };\r\n}\r\nexport function EditVacationCleanAction(): EditVacationAction {\r\n    return { type: EditVacationActionType.EditVacationClean };\r\n}\r\n\r\nexport function editVacationReducer(currentSate: EditVacationState = new EditVacationState(),\r\n    action: EditVacationAction): EditVacationState {\r\n    const newState = { ...currentSate };\r\n    switch (action.type) {\r\n        case EditVacationActionType.EditVacationId:\r\n            newState.EditVacationId = action.payload;\r\n            break;\r\n            case EditVacationActionType.EditVacationClean:\r\n            newState.EditVacationId = 0;\r\n            break;\r\n    }\r\n    return newState;\r\n}","import { io, Socket } from \"socket.io-client\";\r\nimport VacationModel from \"../Components/VacationsArea/Models/VacationModel\";\r\nimport store from \"../Redux/Store\";\r\nimport { VacationAddedAction, VacationDeletedAction, VacationEditedAction } from \"../Redux/VacationsState\";\r\nimport { Globals } from \"../Services/Global\";\r\n\r\nclass SocketManager {\r\n\r\n    private socket: Socket;\r\n\r\n    public connect(): void {\r\n\r\n        // Connect to socket.io:\r\n        this.socket = io(Globals.socketIoUrl);\r\n\r\n        // Listen to socket.io events:\r\n\r\n        this.socket.on(\"msg-from-server-vacation-added\", (addedVacation: VacationModel) => {\r\n            store.dispatch(VacationAddedAction(addedVacation));\r\n        });\r\n\r\n        this.socket.on(\"msg-from-server-vacation-updated\", (updatedVacation: VacationModel) => {\r\n            store.dispatch(VacationEditedAction(updatedVacation));\r\n        });\r\n\r\n        this.socket.on(\"msg-from-server-vacation-deleted\", (id: number) => {\r\n            store.dispatch(VacationDeletedAction(id))\r\n        });\r\n\r\n    }\r\n\r\n    public disconnect(): void {\r\n        this.socket.disconnect();\r\n    }\r\n}\r\n\r\nexport default SocketManager;\r\n\r\nexport const socketManagerInstance = new SocketManager();","import { useHistory } from 'react-router-dom';\r\nimport { socketManagerInstance } from './../Socket.io/SocketManager';\r\nimport axios from \"axios\";\r\nimport UserModel from \"../Components/UserArea/Models/UserModel\";\r\nimport { UserLogoutAction } from \"../Redux/UsersState\";\r\nimport store from '../Redux/Store';\r\nimport { VacationCleanAction } from '../Redux/VacationsState';\r\nimport { EditVacationCleanAction } from '../Redux/EditVacationState';\r\n\r\nexport function authorization(user: UserModel) {\r\n    axios.defaults.headers[\"authorization\"] = `Bearer ${user.token}`;\r\n    return;\r\n}\r\n\r\nexport function logoutUser(){\r\n    sessionStorage.clear();\r\n    store.dispatch(UserLogoutAction());\r\n    store.dispatch(VacationCleanAction());\r\n    store.dispatch(EditVacationCleanAction());\r\n    delete axios.defaults.headers[\"authorization\"];\r\n    socketManagerInstance.disconnect();\r\n    return;\r\n}","import UserModel from \"../Components/UserArea/Models/UserModel\";\r\nimport { authorization } from \"../Services/GlobalAuth\";\r\n\r\nexport class UserState {\r\n    public user: UserModel = null;\r\n\r\n    constructor() {\r\n        const user = JSON.parse(sessionStorage.getItem(\"user\"));\r\n        if (user) {\r\n            authorization(user);\r\n            this.user = user;\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport enum UserActionType {\r\n    UserLogin = \"userLogin\",\r\n    UserLogout = \"userLogout\",\r\n    UserEdited = \"userEdited\"\r\n}\r\n\r\nexport interface UserAction {\r\n    type: UserActionType;\r\n    payload?: any;\r\n}\r\n\r\nexport function UserLoginAction(user: UserModel): UserAction {\r\n    return { type: UserActionType.UserLogin, payload: user };\r\n}\r\n\r\nexport function UserEditedAction(user: UserModel): UserAction {\r\n    return { type: UserActionType.UserEdited, payload: user };\r\n}\r\n\r\nexport function UserLogoutAction(): UserAction {\r\n    return { type: UserActionType.UserLogout };\r\n}\r\n\r\nexport function userReducer(\r\n    currentSate: UserState = new UserState(),\r\n    action: UserAction\r\n): UserState {\r\n    const newState = { ...currentSate };\r\n    switch (action.type) {\r\n        case UserActionType.UserLogin:\r\n            newState.user = action.payload;\r\n            break;\r\n        case UserActionType.UserEdited:\r\n            newState.user = action.payload;\r\n            break;\r\n        case UserActionType.UserLogout:\r\n            newState.user = null;\r\n            break;\r\n    }\r\n    return newState;\r\n}\r\n","import { userReducer } from \"./UsersState\";\r\nimport { combineReducers, createStore } from \"redux\";\r\nimport { vacationReducer } from \"./VacationsState\";\r\nimport { editVacationReducer } from \"./EditVacationState\";\r\n\r\nconst reducers = combineReducers({ userReducer, vacationReducer, editVacationReducer });\r\nconst store = createStore(reducers);\r\n\r\nexport default store;","\r\nclass ErrorsService {\r\n\r\n    public getError(err: any) {\r\n\r\n        if (typeof err === \"string\") return err;\r\n        if (typeof err.error === \"string\") return err.error;\r\n\r\n        if (Array.isArray(err.error)) {\r\n            let allErrors = \"\";\r\n            for (const item of err.error) {\r\n                allErrors += item + \"<br>\";\r\n            }\r\n            return allErrors;\r\n        }\r\n\r\n        if (err.response?.data) return err.response.data;\r\n\r\n        if (typeof err.message === \"string\") {\r\n            if (err.message.startsWith(\"Network Error\")) {\r\n                return \"The server is down or your network. \\n please try again.\";\r\n            }\r\n            return err.message;\r\n        }\r\n\r\n        return \"Some error occurred, please try again later.\";\r\n\r\n    }\r\n}\r\nexport const errorsService = new ErrorsService();\r\n","import \"./VacationUserCard.css\";\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport VacationModel from '../Models/VacationModel';\nimport axios from 'axios';\nimport store from '../../../Redux/Store';\nimport { Globals } from '../../../Services/Global';\nimport FollowModel from '../../FollowsArea/Model/FollowModel';\nimport { FollowAddedAction, FollowDeletedAction, VacationEditedAction } from '../../../Redux/VacationsState';\nimport { Unsubscribe } from 'redux';\nimport { logoutUser } from \"../../../Services/GlobalAuth\";\nimport { useHistory } from \"react-router-dom\";\nimport { errorsService } from '../../../Services/GlobalError';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            maxWidth: 300,\n            maxHeight: 540,\n            display: \"inline-block\",\n        },\n        media: {\n            paddingTop: '56.25%',\n        },\n        expand: {\n            transform: 'rotate(0deg)',\n            marginLeft: 'auto',\n            transition: theme.transitions.create('transform', {\n                duration: theme.transitions.duration.shortest,\n            }),\n        },\n        expandOpen: {\n            color: 'red',\n        },\n        avatar: {\n            backgroundColor: red[500],\n        },\n        playIcon: {\n            right: 10,\n            color: 'red'\n        },\n\n    }),\n);\n\ninterface VacationUserCardProps {\n    vacation: VacationModel\n}\n\nexport default function VacationUserCard(props: VacationUserCardProps) {\n\n    const classes = useStyles();\n\n    const history = useHistory();\n\n    const [expanded, setExpanded] = useState(false);\n\n    let mount = true;\n\n    useEffect(() => {\n        (async function () {\n            const response = await axios.get<FollowModel[]>(`${Globals.followsUrl}${props.vacation.vacationId}`);\n            const follows = response.data;\n            if (follows.find(f => f.userId === store.getState().userReducer.user.userId)) {\n                if (mount)\n                    setExpanded(!expanded);\n                props.vacation.userFollow = true;\n                store.dispatch(VacationEditedAction(props.vacation));\n\n            }\n        })();\n        const unSubscribe: Unsubscribe = store.subscribe(activeFollow);\n        return () => {\n            mount = false;\n            unSubscribe();\n        };\n    }, []);\n\n    const followState = useState<number>(props.vacation.follows ? props.vacation.follows : 0);\n    const follow = followState[0];\n    const followSetState = followState[1];\n\n    const activeFollow = () => {\n        const vacation = store.getState().vacationReducer.vacation.find(v => v.vacationId === props.vacation.vacationId);\n        let follow = 0;\n        if (vacation?.follows) {\n            follow = vacation.follows;\n        }\n        followSetState(follow);\n    }\n\n    const handleExpandClick = async () => {\n        try {\n            if (!expanded) {\n                await axios.post(`${Globals.followsUrl}add-follow/${props.vacation.vacationId}/${store.getState().userReducer.user.userId}`);\n                store.dispatch(FollowAddedAction(props.vacation));\n            }\n            else {\n                await axios.delete(`${Globals.followsUrl}delete-follow/${props.vacation.vacationId}/${store.getState().userReducer.user.userId}`);\n                store.dispatch(FollowDeletedAction(props.vacation));\n            }\n            setExpanded(!expanded);\n        }\n        catch (err) {\n            if (err.response?.status === 403) {\n                history.push(\"/home\");\n                logoutUser();\n                alert(errorsService.getError(err));\n            }\n            else {\n                alert(errorsService.getError(err));\n            }\n        }\n    };\n\n    return (\n\n        <div className=\"VacationUserCard\" style={{ display: \"inline-block\", marginLeft: \"30px\", marginTop: \"10px\" }}>\n            <Card className={classes.root}>\n                <CardMedia\n                    component=\"img\"\n                    alt=\"Contemplative Reptile\"\n                    height=\"140\"\n                    image={`${Globals.vacationsUrl}/image/${props.vacation.imageFileName}`}\n                    title=\"Contemplative Reptile\" />\n                <CardContent>\n                    <Typography variant=\"h5\" component=\"p\">\n                        {props.vacation.destination}\n                    </Typography>\n                </CardContent>\n                <CardContent>\n                    <Typography className=\"description\" component=\"p\">\n                        {props.vacation.description}\n                    </Typography>\n                </CardContent>\n                <CardContent >\n                    <Typography component=\"p\">\n                        From: {new Date(props.vacation.fromDate).toDateString()}\n                    </Typography>\n                    <Typography component=\"p\">\n                        To:{new Date(props.vacation.toDate).toDateString()}\n                    </Typography>\n                    <Typography component=\"p\">\n                        Price:{props.vacation.price + \"$\"}\n                    </Typography>\n                </CardContent>\n                <CardActions disableSpacing>\n                    <Typography component=\"span\">\n                        <IconButton aria-label=\"add to favorites\"\n                            className={clsx(classes.expand, {\n                                [classes.expandOpen]: expanded,\n                            })}\n                            onClick={handleExpandClick}\n                            aria-expanded={!expanded} >\n                            <FavoriteIcon />\n                        </IconButton >\n                        Follows: {follow ? follow : 0}\n                    </Typography>\n                </CardActions>\n            </Card>\n        </div>\n\n    );\n}","import \"./VacationAdminCard.css\";\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { red } from '@material-ui/core/colors';\nimport IconButton from '@material-ui/core/IconButton';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport EditIcon from '@material-ui/icons/Edit';\nimport axios from 'axios';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { EditVacationIdAction } from '../../../Redux/EditVacationState';\nimport store from '../../../Redux/Store';\nimport { Globals } from '../../../Services/Global';\nimport { logoutUser } from '../../../Services/GlobalAuth';\nimport VacationModel from '../Models/VacationModel';\nimport { useHistory } from \"react-router-dom\";\nimport { errorsService } from '../../../Services/GlobalError';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            maxWidth: 300,\n            maxHeight:5400,\n            display: \"inline-block\",\n        },\n        media: {\n            paddingTop: '56.25%',\n        },\n        expand: {\n            transform: 'rotate(0deg)',\n            marginLeft: 'auto',\n            transition: theme.transitions.create('transform', {\n                duration: theme.transitions.duration.shortest,\n            }),\n        },\n        expandOpen: {\n            color: 'red',\n        },\n        avatar: {\n            backgroundColor: red[500],\n        },\n        playIcon: {\n            right: 10,\n            color: 'red'\n        },\n    }),\n);\n\ninterface VacationAdminCardProps {\n    vacation: VacationModel\n}\n\nexport default function VacationAdminCard(props: VacationAdminCardProps) {\n\n    const classes = useStyles();\n\n    const history = useHistory();\n\n    const send = () => {\n        sessionStorage.setItem(\"EditVacationId\", JSON.stringify(props.vacation.vacationId));\n        store.dispatch(EditVacationIdAction(props.vacation.vacationId))\n    }\n\n    const deleteVacation = (async () => {\n        try {\n            const answer = window.confirm(\"Are you suer?\")\n            if (!answer) {\n                return;\n            }\n            else {\n                const id = props.vacation.vacationId;\n                await axios.delete<VacationModel>(`${Globals.vacationsUrl}${id}`);\n            }\n        }\n        catch (err) {\n            if (err.response?.status === 403) {\n                logoutUser();\n                alert(errorsService.getError(err));\n                history.push(\"/home\");\n            }\n            else{\n                alert(errorsService.getError(err));\n            }    \n        }\n    });\n\n    return (\n\n        <div className=\"VacationAdminCard\" style={{ display: \"inline-block\", marginLeft: \"30px\", marginTop: \"10px\" }}>\n            <Card className={classes.root} key={props.vacation.vacationId} >\n                <CardMedia\n                    component=\"img\"\n                    alt=\"Contemplative Reptile\"\n                    height=\"140\"\n                    image={`${Globals.vacationsUrl}image/${props.vacation.imageFileName}`}\n                    title=\"Contemplative Reptile\"\n                />\n                <CardContent>\n                    <Typography variant=\"h5\"  component=\"p\">\n                        {props.vacation.destination}\n                    </Typography>\n                </CardContent>\n                <CardContent>\n                    <Typography className=\"description\"  component=\"p\"  >\n                        {props.vacation.description}\n                    </Typography>\n                </CardContent>\n                <CardContent >\n                    <Typography  component=\"p\">\n                        From: {new Date(props.vacation.fromDate).toDateString()}\n                    </Typography>\n                    <Typography  component=\"p\">\n                        To:{new Date(props.vacation.toDate).toDateString()}\n                    </Typography>\n                    <Typography  component=\"p\">\n                        Price:{props.vacation.price + \"$\"}\n                    </Typography>\n                </CardContent>\n                <CardActions disableSpacing>\n                    <Typography>\n                        <IconButton aria-label=\"delete vacation\"\n                            onClick={deleteVacation} >\n                            <DeleteForeverIcon />\n                        </IconButton>\n                        <NavLink onClick={send} to={`/edit-vacation/${props.vacation.vacationId}`}\n                        >\n                            <IconButton aria-label=\"edit vacation\">\n                                <EditIcon />\n                            </IconButton>\n                        </NavLink>\n                    </Typography>\n                </CardActions>\n            </Card>\n        </div>\n\n    );\n}","import axios from \"axios\";\nimport { Component } from \"react\";\nimport VacationModel from \"../Models/VacationModel\";\nimport store from \"../../../Redux/Store\";\nimport \"./VacationsList.css\";\nimport UserModel from \"../../UserArea/Models/UserModel\";\nimport VacationUserCard from \"../VacationUserCard/VacationUserCard\";\nimport VacationAdminCard from \"../VacationAdminCard/VacationAdminCard\";\nimport { VacationDownloadedAction } from \"../../../Redux/VacationsState\";\nimport { Globals } from \"../../../Services/Global\";\nimport { Unsubscribe } from \"redux\";\nimport { History } from \"history\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { errorsService } from \"../../../Services/GlobalError\";\nimport { logoutUser } from \"../../../Services/GlobalAuth\";\n\ninterface VacationsListState {\n    vacations: VacationModel[];\n    userLogin: UserModel;\n}\n\ninterface VacationsListProps extends RouteComponentProps {\n    history: History;\n}\n\nclass VacationsList extends Component<VacationsListProps, VacationsListState> {\n\n    private unsubscribeFromStore: Unsubscribe;\n\n    public constructor(props: VacationsListProps) {\n        super(props);\n        this.state = { vacations: store.getState().vacationReducer.vacation, userLogin: store.getState().userReducer.user };\n    }\n\n    public async componentDidMount() {\n        try {\n            this.unsubscribeFromStore = store.subscribe(() => {\n                const vacations = store.getState().vacationReducer.vacation;\n                this.setState({ vacations });\n            });\n            if (store.getState().vacationReducer.vacation.length === 0) {\n                const response = await axios.get<VacationModel[]>(Globals.vacationsUrl);\n                const vacations = response.data;\n                store.dispatch(VacationDownloadedAction(vacations));\n            }\n        }\n        catch (err) {\n            if (err.response?.status === 403) {\n                logoutUser();\n                this.props.history.push(\"/home\");\n                alert(errorsService.getError(err));\n            }\n            else {\n                alert(errorsService.getError(err));\n            }\n        }\n    }\n\n    public render(): JSX.Element {\n\n        return (\n\n            <div className=\"VacationsList\">\n                <h2>Our Vacations</h2>\n                {this.state.userLogin && this.state.userLogin.isAdmin === 1 ?\n                    this.state.vacations.map(v => <VacationAdminCard key={v.vacationId} vacation={v} />) :\n                    this.state.vacations.map(v => <VacationUserCard key={v.vacationId} vacation={v} />)}\n            </div>\n\n        );\n    }\n\n    public componentWillUnmount(): void {\n        this.unsubscribeFromStore();\n    }\n}\n\nexport default VacationsList;\n","import { Avatar, Button, Grid, Paper, TextField, Typography, Link, Container } from '@material-ui/core';\nimport React from 'react';\nimport AssignmentOutlinedIcon from '@material-ui/icons/AssignmentOutlined';\nimport { NextPage } from 'next/types';\nimport './Register.css';\nimport { useForm } from 'react-hook-form';\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport { Globals } from '../../../Services/Global';\nimport { errorsService } from '../../../Services/GlobalError';\n\ninterface FormData {\n    firstName: string;\n    lastName: string;\n    userName: string;\n    password: string;\n}\n\nconst Register: NextPage = () => {\n\n    const history = useHistory();\n\n    const { handleSubmit, register } = useForm<FormData>();\n\n    const onSubmit = handleSubmit(async (data) => {\n        try {\n            await axios.post(`${Globals.authUrl}register`, data);\n            history.push(\"/home\");\n        }\n        catch (err) {\n            alert(errorsService.getError(err));\n        }\n    });\n\n    const paperStyle = { padding: 20, height: 370, width: 280, margin: \"20px auto\" }\n    const avatarStyle = { backgroundColor: '#1bbd7e', align: 'center', margin: \"auto\", marginTop: \"10px\" }\n    const btStyle = { margin: '8px 0', marginTop: \"10px\" }\n    const containerStyle = { marginTop: '5%' }\n\n    return (\n\n        <div>\n            <Container style={containerStyle}>\n                <form onSubmit={onSubmit}>\n                    <Grid>\n                        <Paper elevation={10} style={paperStyle}>\n                            <Grid >\n                                <Avatar style={avatarStyle}><AssignmentOutlinedIcon /></Avatar>\n                                <h2>Sign up</h2>\n                            </Grid>\n                            <TextField\n                                inputProps={{minLength:2,maxLength:25}}\n                                fullWidth required\n                                inputRef={register}\n                                label=\"First name\"\n                                name=\"firstName\"\n                                size=\"small\"\n                            />\n                            <TextField\n                            inputProps={{minLength:2,maxLength:25}}\n                                fullWidth required\n                                inputRef={register}\n                                label=\"Last name\"\n                                name=\"lastName\"\n                                size=\"small\"\n                            />\n                            <TextField\n                            inputProps={{minLength:2,maxLength:25}}\n                                fullWidth required\n                                inputRef={register}\n                                label=\"Username\"\n                                name=\"userName\"\n                                size=\"small\"\n                            />\n                            <TextField\n                            inputProps={{minLength:4,maxLength:250}}\n                                fullWidth required\n                                inputRef={register}\n                                label=\"Password\"\n                                name=\"password\"\n                                size=\"small\"\n                                type=\"password\"\n                            />\n                            <Button type=\"submit\" color=\"primary\" variant=\"contained\" style={btStyle}\n                                fullWidth>Sign up</Button>\n                            <Typography> Do you have an account?\n                    <Link href=\"/home\" >\n                                    Sing in\n                    </Link>\n                            </Typography>\n                        </Paper>\n                    </Grid>\n                </form>\n            </Container>\n        </div>\n\n    );\n}\n\nexport default Register;","import { Avatar, Button, Grid, Paper, TextField, Typography, Link } from '@material-ui/core';\nimport React from 'react';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { NextPage } from 'next/types';\nimport './Login.css';\nimport { useForm } from 'react-hook-form';\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport { UserLoginAction } from '../../../Redux/UsersState';\nimport store from '../../../Redux/Store';\nimport { Globals } from '../../../Services/Global';\nimport { socketManagerInstance } from '../../../Socket.io/SocketManager';\nimport { authorization } from '../../../Services/GlobalAuth';\nimport { errorsService } from '../../../Services/GlobalError';\n\ninterface FormData {\n    userName: string;\n    password: string;\n}\n\nconst Login: NextPage = () => {\n\n    const { handleSubmit, register } = useForm<FormData>();\n\n    const history = useHistory();\n\n    const onSubmit = handleSubmit(async (data) => {\n        try {\n            const response = await axios.post(`${Globals.authUrl}login`, data);\n            const user = response.data;\n            sessionStorage.setItem(\"user\", JSON.stringify(user));\n            store.dispatch(UserLoginAction(user));\n            socketManagerInstance.connect();\n            authorization(user);\n            history.push(\"/vacations\");\n        }\n        catch (err) {\n            alert(errorsService.getError(err));\n        }\n    });\n\n    const paperStyle = { padding: 20, height: 300, width: 280, margin: \"20px auto\" }\n    const avatarStyle = { backgroundColor: '#1bbd7e', align: 'center', margin: \"auto\", marginTop: \"10px\" }\n    const btStyle = { margin: '8px 0', marginTop: \"10px\" }\n    const formStyle = { marginTop: '5%' }\n\n    return (\n\n        <form onSubmit={onSubmit} style={formStyle}>\n            <Grid>\n                <Paper elevation={10} style={paperStyle}>\n                    <Grid >\n                        <Avatar style={avatarStyle}><LockOutlinedIcon /></Avatar>\n                        <h2>Sign in</h2>\n                    </Grid>\n                    <TextField\n                       inputProps={{minLength:2,maxLength:25}}\n                        fullWidth required\n                        inputRef={register}\n                        label=\"Username\"\n                        name=\"userName\"\n                        size=\"small\"\n                    />\n                    <TextField\n                       inputProps={{minLength:2,maxLength:25}}\n                        fullWidth required\n                        inputRef={register}\n                        label=\"Password\"\n                        name=\"password\"\n                        size=\"small\"\n                        type=\"password\"\n                    />\n                    <Button type=\"submit\" color=\"primary\" variant=\"contained\"\n                        style={btStyle} fullWidth>Sign in</Button>\n                    <Typography> Do you have an account?\n                    <Link href=\"/register\" >\n                            Sign up\n                    </Link>\n                    </Typography>\n                </Paper>\n            </Grid>\n        </form>\n        \n    );\n}\n\nexport default Login;","import { NextPage } from 'next/types';\nimport { useForm } from 'react-hook-form';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from \"axios\";\nimport VacationModel from \"../Models/VacationModel\";\nimport { useHistory } from \"react-router-dom\";\nimport { Globals } from '../../../Services/Global';\nimport { logoutUser } from \"../../../Services/GlobalAuth\";\nimport { useState } from 'react';\nimport { errorsService } from '../../../Services/GlobalError';\nimport { Paper } from '@material-ui/core';\n\ninterface FormData {\n    destination: string;\n    description: string;\n    fromDate: string;\n    toDate: string;\n    price: number;\n    imageFileName: FileList;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        padding: theme.spacing(3),\n    },\n}));\n\nconst AddVacation: NextPage = () => {\n\n    const { handleSubmit, register } = useForm<FormData>();\n\n    const [date, setDate] = useState<string>(new Date().toISOString().slice(0, 10));\n\n    const classes = useStyles();\n\n    const history = useHistory();\n\n    const onSubmit = handleSubmit(async (data) => {\n        try {\n            const myFormData = new FormData();\n            myFormData.append(\"destination\", data.destination);\n            myFormData.append(\"description\", data.description);\n            myFormData.append(\"fromDate\", data.fromDate.toString());\n            myFormData.append(\"toDate\", data.toDate.toString());\n            myFormData.append(\"price\", data.price.toString());\n            myFormData.append(\"imageFileName\", data.imageFileName.item(0));\n            await axios.post<VacationModel>(Globals.vacationsUrl, myFormData);\n            history.push(\"/vacations\");\n        }\n        catch (err) {\n            if (err.response?.status === 403) {\n                // alert(\"Your login session has expired. Please login again.\");\n                history.push(\"/home\");\n                logoutUser();\n                alert(errorsService.getError(err));\n            }\n            else {\n                alert(errorsService.getError(err));\n            }\n        }\n    });\n    const paperStyle = { padding: 20, maxHeight: \"fitContent\", maxWidth: 400, margin: \"20px auto\" }\n    return (\n\n        <form onSubmit={onSubmit} action=\"/upload-image\" method=\"POST\" encType=\"multipart/form-data\">\n            <h2>Add vacation</h2>\n            <Container className={classes.container} maxWidth=\"xs\">\n                <Paper elevation={10} style={paperStyle}>\n\n                <Grid container spacing={3}>\n                    <Grid item xs={12}>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12}>\n                                <TextField\n                                    inputProps={{ minLength: 3, maxLength: 30 }}\n                                    fullWidth required\n                                    inputRef={register}\n                                    label=\"Destination\"\n                                    name=\"destination\"\n                                    size=\"small\"\n                                    variant=\"outlined\"\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                \n                                    inputProps={{ minLength: 5, maxLength: 1000 }}\n                                    fullWidth required\n                                    multiline\n                                    inputRef={register}\n                                    label=\"Description\"\n                                    name=\"description\"\n                                    size=\"small\"\n                                    type=\"textarea\"\n                                    variant=\"outlined\"\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField InputLabelProps={{ shrink: true }}\n                                    inputProps={{ min: new Date().toISOString().slice(0, 10), max: \"2050-01-01\" }}\n                                    fullWidth required\n                                    inputRef={register}\n                                    label=\"From date\"\n                                    name=\"fromDate\"\n                                    size=\"small\"\n                                    type=\"date\"\n                                    variant=\"outlined\"\n                                    onChange={e => setDate(e.target.value)}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField InputLabelProps={{ shrink: true }}\n                                    inputProps={{ min: date, max: \"2050-01-01\" }}\n                                    fullWidth required\n                                    inputRef={register}\n                                    label=\"To date\"\n                                    name=\"toDate\"\n                                    size=\"small\"\n                                    type=\"date\"\n                                    variant=\"outlined\"\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    inputProps={{ min: 300, max: 10000 }}\n                                    fullWidth required\n                                    inputRef={register}\n                                    label=\"Price\"\n                                    name=\"price\"\n                                    size=\"small\"\n                                    type=\"number\"\n                                    variant=\"outlined\"\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    inputProps={{ accept: \"image/*\" }}\n                                    fullWidth required\n                                    inputRef={register}\n                                    name=\"imageFileName\"\n                                    size=\"small\"\n                                    type=\"file\"\n                                    variant=\"outlined\"\n                                />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Button type=\"submit\" color=\"primary\" fullWidth variant=\"contained\">\n                            Add vacation\n              </Button>\n                    </Grid>\n                </Grid>\n                </Paper>\n            </Container>\n         \n        </form>\n\n    );\n};\n\nexport default AddVacation;","import { Button } from \"@material-ui/core\";\nimport \"./Logout.css\";\nimport { useHistory } from \"react-router-dom\";\nimport MeetingRoomIcon from '@material-ui/icons/MeetingRoom';\nimport { logoutUser } from \"../../../Services/GlobalAuth\";\n\nfunction Logout(): JSX.Element {\n\n    const btStyle = { margin: '8px 0', marginTop: \"10px\" }\n    const history = useHistory();\n    let user = JSON.parse(sessionStorage.getItem(\"user\"));\n\n    const logout = () => {\n        logoutUser();\n        history.push(\"/home\");\n    }\n\n    return (\n\n        <div className=\"Logout\">\n            {user ? <Button color=\"secondary\" variant=\"contained\" style={btStyle}\n                fullWidth onClick={logout}>Logout <MeetingRoomIcon fontSize=\"small\" /></Button> : null}\n        </div>\n\n    );\n}\n\nexport default Logout;\n","import \"./EditUser.css\";\nimport { Avatar, Button, Grid, Paper, TextField, Container } from '@material-ui/core';\nimport React from 'react';\nimport { NextPage } from 'next/types';\nimport { useForm } from 'react-hook-form';\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport { UserEditedAction } from '../../../Redux/UsersState';\nimport store from '../../../Redux/Store';\nimport Logout from \"../Logout/Logout\";\nimport { Unsubscribe } from \"redux\";\nimport { useEffect, useState } from 'react';\nimport UserModel from \"../Models/UserModel\";\nimport SendIcon from '@material-ui/icons/Send';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { Globals } from \"../../../Services/Global\";\nimport { logoutUser } from \"../../../Services/GlobalAuth\";\nimport { errorsService } from \"../../../Services/GlobalError\";\n\ninterface FormData {\n    firstName: string;\n    lastName: string;\n    userName: string;\n}\n\nconst EditUser: NextPage = () => {\n\n    const history = useHistory();\n\n    const { handleSubmit, register } = useForm<FormData>();\n\n    const userState = useState<UserModel>(store.getState().userReducer.user);\n    const user = userState[0];\n    const userSetState = userState[1];\n\n    useEffect(() => {\n        const unSubscribe: Unsubscribe = store.subscribe(() => {\n            const user = store.getState().userReducer.user;\n            userSetState(user);\n        })\n        return unSubscribe;\n    });\n\n    const onSubmit = handleSubmit(async (data) => {\n        try {\n            const response = await axios.put(`${Globals.usersUrl}update/` + user.userId, data);\n            sessionStorage.setItem(\"user\", JSON.stringify(response.data));\n            store.dispatch(UserEditedAction(response.data));\n            history.push(\"/vacations\");\n        }\n        catch (err) {\n            if (err.response?.status === 403) {\n                logoutUser();\n                history.push(\"/home\");\n                alert(errorsService.getError(err));\n            }\n            else{\n                alert(errorsService.getError(err));\n            }\n        }\n    });\n\n    const paperStyle = { padding: 20, height: 350, width: 280, margin: \"20px auto\" }\n    const avatarStyle = { backgroundColor: '#1bbd7e', align: 'center', margin: \"auto\", marginTop: \"10px\" }\n    const btStyle = { margin: '8px 0', marginTop: \"10px\" }\n    const containerStyle = { marginTop: '5%' }\n\n    return (\n        \n        <div>\n            <Container style={containerStyle}>\n                <form onSubmit={onSubmit}>\n                    <Grid>\n                        <Paper elevation={10} style={paperStyle}>\n                            <Grid >\n                                <Avatar style={avatarStyle}><EditIcon /></Avatar>\n                                <h2>Edit user</h2>\n                            </Grid>\n                            <TextField defaultValue={user.firstName}\n                             inputProps={{minLength:2,maxLength:25}}\n                                fullWidth required\n                                inputRef={register}\n                                label=\"First name\"\n                                name=\"firstName\"\n                                size=\"small\"\n                            />\n                            <TextField defaultValue={user.lastName}\n                             inputProps={{minLength:2,maxLength:25}}\n                                fullWidth required\n                                inputRef={register}\n                                label=\"Last name\"\n                                name=\"lastName\"\n                                size=\"small\"\n                            />\n                            <TextField defaultValue={user.userName}\n                             inputProps={{minLength:2,maxLength:25}}\n                                fullWidth required\n                                inputRef={register}\n                                label=\"Username\"\n                                name=\"userName\"\n                                size=\"small\"\n                            />\n                            <Button type=\"submit\" color=\"primary\" variant=\"contained\"\n                                style={btStyle} fullWidth>Update details  <SendIcon fontSize=\"small\" /></Button>\n                            <Logout />\n                        </Paper>\n                    </Grid>\n                </form>\n            </Container>\n        </div>\n\n    );\n}\n\nexport default EditUser;","import store from \"../../../Redux/Store\";\nimport Login from \"../../UserArea/Login/Login\";\nimport \"./Home.css\";\n\nfunction Home(): JSX.Element {\n    return (\n\n        <div className=\"Home\">\n           {!store.getState().userReducer.user?<Login />:<h2>Welcome \n               back {store.getState().userReducer.user.firstName} {store.getState().userReducer.user.lastName}</h2>}\n        </div>\n\n    );\n}\n\nexport default Home;\n","import { useForm } from 'react-hook-form';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from \"axios\";\nimport VacationModel from \"../Models/VacationModel\";\nimport { useHistory } from \"react-router-dom\";\nimport { History } from \"history\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport store from '../../../Redux/Store';\nimport { Globals } from '../../../Services/Global';\nimport { useEffect, useState } from 'react';\nimport { EditVacationIdAction } from '../../../Redux/EditVacationState';\nimport { logoutUser } from \"../../../Services/GlobalAuth\";\nimport { errorsService } from '../../../Services/GlobalError';\nimport { Paper } from '@material-ui/core';\n\ninterface FormData {\n    vacationId: number;\n    destination: string;\n    description: string;\n    fromDate: string;\n    toDate: string;\n    price: number;\n    imageFileName: string;\n    newImageFileName: FileList;\n}\n\ninterface MatchParams {\n    vacationId: string;\n}\n\ninterface EditVacationProps extends RouteComponentProps<MatchParams> {\n    history: History;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        padding: theme.spacing(3),\n    },\n}));\n\nfunction EditVacation(props: EditVacationProps): JSX.Element {\n\n    const history = useHistory();\n\n    const [date, setDate] = useState<string>(new Date().toISOString().slice(0, 10));\n\n    const vacation = store.getState().vacationReducer.vacation.find(v => v.vacationId === +props.match.params.vacationId);\n\n    useEffect(() => {\n\n        if (!vacation) {\n            store.dispatch(EditVacationIdAction(0));\n            props.history.push(\"/vacations\");\n            return;\n        }\n    });\n\n    if (vacation) {\n        vacation.fromDate = new Date(vacation.fromDate).toISOString().slice(0, 10);\n        vacation.toDate = new Date(vacation.toDate).toISOString().slice(0, 10);\n    }\n\n    const { handleSubmit, register } = useForm<FormData>({ defaultValues: vacation });\n\n    const classes = useStyles();\n\n    const onSubmit = handleSubmit(async (data) => {\n        try {\n            data.vacationId = +props.match.params.vacationId;\n            const myFormData = new FormData();\n            myFormData.append(\"vacationId\", data.vacationId.toString());\n            myFormData.append(\"destination\", data.destination);\n            myFormData.append(\"description\", data.description);\n            myFormData.append(\"fromDate\", data.fromDate.toString());\n            myFormData.append(\"toDate\", data.toDate.toString());\n            myFormData.append(\"price\", data.price.toString());\n            myFormData.append(\"imageFileName\", vacation.imageFileName);\n            if (data.newImageFileName.item(0) !== null) {\n                myFormData.append(\"newImageFileName\", data.newImageFileName.item(0));\n            }\n            await axios.put<VacationModel>(`${Globals.vacationsUrl}` + vacation.vacationId, myFormData);\n            history.push(\"/vacations\");\n            store.dispatch(EditVacationIdAction(0));  \n        }\n        catch (err) {\n            if (err.response?.status === 403) {\n                history.push(\"/home\");  \n                logoutUser();\n                return alert(errorsService.getError(err));\n            }\n            else {\n                alert(errorsService.getError(err));\n            }\n        }\n    });\n    const paperStyle = { padding: 20, maxHeight: \"fitContent\", maxWidth: 400, margin: \"20px auto\" }\n\n    return (\n\n        <form onSubmit={onSubmit} action=\"/upload-image\" method=\"POST\" encType=\"multipart/form-data\">\n            <h2>Edit vacation</h2>\n            <Container className={classes.container} maxWidth=\"xs\">\n            <Paper elevation={10} style={paperStyle}>\n                <Grid container spacing={3}>\n                    <Grid item xs={12}>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12}>\n                                <TextField\n                                    fullWidth required\n                                    inputProps={{ minLength: 3, maxLength: 30 }}\n                                    inputRef={register}\n                                    label={\"Destination\"}\n                                    name=\"destination\"\n                                    size=\"small\"\n                                    variant=\"outlined\" />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    fullWidth required\n                                    inputProps={{ minLength: 5, maxLength: 1000 }}\n                                    multiline\n                                    inputRef={register}\n                                    label=\"Description\"\n                                    name=\"description\"\n                                    size=\"small\"\n                                    variant=\"outlined\" />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField InputLabelProps={{ shrink: true }}\n                                    inputProps={{ min: new Date().toISOString().slice(0, 10), max: \"2050-01-01\" }}\n                                    fullWidth required\n                                    inputRef={register}\n                                    label=\"From date\"\n                                    name=\"fromDate\"\n                                    size=\"small\"\n                                    type=\"date\"\n                                    variant=\"outlined\"\n                                    onChange={e => setDate(e.target.value)} />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField InputLabelProps={{ shrink: true }}\n                                    inputProps={{ min: date, max: \"2050-01-01\" }}\n                                    fullWidth required\n                                    inputRef={register}\n                                    label=\"To date\"\n                                    name=\"toDate\"\n                                    size=\"small\"\n                                    type=\"date\"\n                                    variant=\"outlined\" />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    inputProps={{ minLength: 300, maxLength: 10000 }}\n                                    fullWidth required\n                                    inputRef={register}\n                                    label=\"Price\"\n                                    name=\"price\"\n                                    size=\"small\"\n                                    type=\"number\"\n                                    variant=\"outlined\" />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    inputProps={{ accept: \"image/*\" }}\n                                    inputRef={register}\n                                    name=\"newImageFileName\"\n                                    size=\"small\"\n                                    type=\"file\"\n                                    variant=\"outlined\" />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Button type=\"submit\" color=\"primary\" fullWidth variant=\"contained\">\n                            Edit vacation\n                        </Button>\n                    </Grid>\n                </Grid>\n                </Paper>\n            </Container>\n        </form>\n\n    );\n}\n\nexport default EditVacation;","export function getRandomColor(){\r\n    const letters = '0123456789ABCDEF';\r\n    let color = '#';\r\n    for (var i = 0; i < 6; i++) {\r\n        color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n}","import \"./AdminPage.css\";\nimport { Bar } from \"react-chartjs-2\";\nimport { useEffect, useState } from \"react\";\nimport store from \"../../../Redux/Store\";\nimport { Unsubscribe } from \"redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { getRandomColor } from \"../../../Services/GlobalRandomColor\";\n\ninterface adminModel {\n    follows: number;\n    destination: string;\n    color: string;\n}\n\nconst AdminPage = () => {\n\n    const history = useHistory();\n\n    let vacations: adminModel[] = [];\n\n    store.getState().vacationReducer.vacation.map(v => v.follows ? vacations.push({ follows: v.follows, destination: v.destination, color: getRandomColor() }) : null);\n\n    const [vacationFollowers, setVacationFollowers] = useState<adminModel[]>(vacations);\n\n    useEffect(() => {\n        if (!store.getState().userReducer.user.isAdmin || vacations.length === 0) {\n            history.push(\"/vacations\");\n            return;\n        }\n        const unSubscribe: Unsubscribe = store.subscribe(() => {\n            const vacationFollowers = [];\n            store.getState().vacationReducer.vacation.map(v => v.follows ? vacationFollowers.push({ follows: v.follows, destination: v.destination, color: getRandomColor() }) : null);\n            setVacationFollowers(vacationFollowers);\n        })\n        return unSubscribe;\n    }, [])\n\n    return (\n\n        <div className=\"AdminPage\">\n            <Bar \n                data={{\n                    labels: vacationFollowers.map(v => v.destination),\n                    datasets: [{\n                        label: '# of Vacation',\n                        data: vacationFollowers.map(v => v.follows),\n                        backgroundColor: vacationFollowers.map(v => v.color),\n                        borderColor: vacationFollowers.map(v => v.color),\n                        borderWidth: 1,\n                        color:\"black\"\n                    },]\n                }}\n                height={300}\n                width={400}\n                options={{\n                    maintainAspectRatio: false,\n                    scales: {\n                        yAxes: [\n                            {\n                                ticks: {\n                                    beginAtZero: true,\n                                    stepSize: 1,\n                                \n                                }\n                            }\n                        ]\n                    }\n                }}\n            />\n        </div>\n\n    );\n}\n\nexport default AdminPage;\n","import React, { useEffect, useState } from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport FlightTakeoffIcon from '@material-ui/icons/FlightTakeoff';\nimport AssignmentOutlinedIcon from '@material-ui/icons/AssignmentOutlined';\nimport { BrowserRouter, Switch, Route, Link, Redirect, } from 'react-router-dom';\nimport VacationsList from '../../VacationsArea/VacationsList/VacationsList';\nimport HomeIcon from '@material-ui/icons/Home';\nimport { AppBar } from '@material-ui/core';\nimport Register from '../../UserArea/Register/Register';\nimport Login from '../../UserArea/Login/Login';\nimport AddVacation from '../../VacationsArea/AddVacation/AddVacation';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport EditUser from '../../UserArea/EditUser/EditUser';\nimport Home from '../Home/Home';\nimport Logout from '../../UserArea/Logout/Logout';\nimport UserModel from '../../UserArea/Models/UserModel';\nimport { Unsubscribe } from \"redux\";\nimport EditVacation from '../../VacationsArea/EditVacation/EditVacation';\nimport store from '../../../Redux/Store';\nimport AdminPage from \"../../VacationsArea/AdminPage/AdminPage\";\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\nimport { EditVacationIdAction } from '../../../Redux/EditVacationState';\n\nexport default function VacationTab() {\n\n    const vacationState = useState(store.getState().editVacationReducer.EditVacationId);\n    const vacation = vacationState[0];\n    const vacationSetState = vacationState[1];\n\n    const userState = useState<UserModel>(store.getState().userReducer.user);\n    const user = userState[0];\n    const userSetState = userState[1];\n\n    useEffect(() => {\n        const unSubscribe: Unsubscribe = store.subscribe(() => {\n            const user = store.getState().userReducer.user;\n            const vacation = store.getState().editVacationReducer.EditVacationId;\n            userSetState(user);\n            vacationSetState(vacation);\n\n        })\n        return unSubscribe;\n    });\n\n    const sendEditVacationId = () => {\n        sessionStorage.setItem(\"EditVacationId\", JSON.stringify(0));\n        store.dispatch(EditVacationIdAction(0))\n    }\n\n    const routes = [\"/home\", \"/vacations\", \"/register\", \"/add-vacation\", \"/edit-user\", vacation !== 0 ? `/edit-vacation/${vacation}` : null, \"/admin-page\"];\n\n    return (\n        <BrowserRouter>\n            <Route path=\"/\" render={(history) => (\n                <AppBar  >\n                    <Tabs\n                        value={history.location.pathname !== \"/\" ? history.location.pathname : false}\n                        variant=\"fullWidth\"\n                        scrollButtons=\"on\"\n                    >\n                        <Tab icon={<HomeIcon />} label=\"Home\" onClick={sendEditVacationId} value={routes[0]} component={Link} to={routes[0]} />\n                        {user ? <Tab onClick={sendEditVacationId} icon={<FlightTakeoffIcon />} label=\"Vacations\" value={routes[1]} component={Link} to={routes[1]} /> :\n                            <Tab onClick={sendEditVacationId} icon={<FlightTakeoffIcon />} label=\"Vacations\" value={routes[1]} component={Link} to={routes[0]} />}\n                        {!user ? <Tab icon={<AssignmentOutlinedIcon />} label=\"Register\" value={routes[2]} component={Link} to={routes[2]} /> : null}\n                        {user && user.isAdmin === 1 ? <Tab onClick={sendEditVacationId} icon={<AddCircleOutlineOutlinedIcon />} label=\"Add vacation \" value={routes[3]} component={Link} to={routes[3]} /> : null}\n                        {vacation !== 0 && user && user.isAdmin === 1 ? <Tab icon={<AssignmentOutlinedIcon />} label=\"Edit vacation\" value={routes[5]} component={Link} to={routes[5]} /> : null}\n                        {user && user.isAdmin === 1 ? <Tab onClick={sendEditVacationId} icon={<AssignmentOutlinedIcon />} label=\"Admin page\" value={routes[6]} component={Link} to={routes[6]} /> : null}\n                        {user ? <Tab onClick={sendEditVacationId} icon={<AccountCircleIcon />} label={`Hello ${user.firstName} ${user.lastName}`} value={routes[4]} component={Link} to={routes[4]} /> :\n                            <Tab icon={<AccountCircleIcon />} label={`Hello Guest`} value={routes[4]} component={Link} to={routes[0]} />}\n                            {!routes.includes(history.location.pathname) ? <Tab  value={history.location.pathname } /> : null} \n                    </Tabs>\n                </AppBar>\n            )}\n            />\n\n            <Switch>\n                <Route path=\"/home\" component={Home} exact />\n                <Route path=\"/vacations\" component={VacationsList} exact />\n                <Route path=\"/login\" component={Login} exact />\n                <Route path=\"/logout\" component={Logout} exact />\n                <Route path=\"/register\" component={Register} exact />\n                <Route path=\"/add-vacation\" component={AddVacation} exact />\n                <Route path=\"/edit-vacation/:vacationId\" component={EditVacation} exact />\n                <Route path=\"/edit-user\" component={EditUser} exact />\n                <Route path=\"/admin-page\" component={AdminPage} exact />\n                <Redirect from=\"*\" to=\"/home\" exact />\n            </Switch>\n\n        </BrowserRouter>\n\n    );\n}\n\n","import \"./App.css\";\nimport VacationTab from \"../VacationTab/VacationTab\";\nimport { useEffect } from \"react\";\nimport store from \"../../../Redux/Store\";\nimport { socketManagerInstance } from \"../../../Socket.io/SocketManager\";\n\nfunction App(): JSX.Element {\n\n    // start listening to socket.io\n    useEffect(() => {\n        if (store.getState().userReducer.user) {\n            socketManagerInstance.connect()\n        }\n    })\n\n    return (\n\n        <div className=\"App\">\n            <h1 style={{ marginTop: \"15vh\" }}>Vacation Trips</h1>\n            <VacationTab />\n        </div>\n\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/LayoutArea/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport Header from './Components/LayoutArea/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Header />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}